class Solution
{private:
Node* reverse(Node* head){
    Node* curr=head;
    Node* prev=NULL;
    Node* forward=NULL;
    
    while(curr!=NULL){
        forward=curr->next;
        curr->next=prev;
        prev=curr;
        curr=forward;
    }
    return prev;
}
    public:
    Node* addOne(Node *head) 
    {
        // Your Code here
        // return head of list after adding one
        Node* dummy=new Node(0);
        Node* temp=dummy;
        Node* l1=reverse(head);
         int carry=1;
        while(l1!=NULL||carry!=0){
           int sum=0;
            if(l1!=NULL){
                sum+=l1->data;
                l1=l1->next;
            }
            sum=sum+carry;
            carry=sum/10;
            Node* node=new Node(sum%10);
            temp->next=node;
            temp=temp->next;
            
        }
        return reverse(dummy->next); 
        
    }
};
